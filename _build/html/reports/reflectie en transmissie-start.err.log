Traceback (most recent call last):
  File "C:\Users\henk.tober\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\henk.tober\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\henk.tober\AppData\Local\anaconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\henk.tober\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\henk.tober\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\henk.tober\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\henk.tober\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

d_theta = 0.001
range_hoek = 0.5 *math.pi #begin en eindhoek in radialen       
theta = 0.001 #start bij 0.001 radialen   
n_1 = 1.3
n_2 = 1.5

# hier maak je lege lijsten aan die je gaat vullen met berekende waarden
hoek = []
r_lr =  []
r_par = []
t_par = []
t_lr = []

  
while theta < range_hoek:
    #eerst met wet van snellius transmissie hoek uitrekenen
    a = math.sin(theta)*n_1/n_2  
    
   
    if a > -1 and a < 1:  #hier checken of a in het in het domein blijft van inverse sinus functie
        theta_t = math.asin(a)
        # coefficienten uitrekenen voor elke hoek
        r_loodrecht = 
                
        
        # toevoegen van berekende waarden aan lijsten
        hoek.append(math.degrees(theta))
        r_lr.append(r_loodrecht)
        
    theta += d_theta

#polot nu de grafieken
fig, (ax1) = plt.subplots(figsize=(10, 10))
    # hier worden de waardes voor de cooefcienten geprint
ax1.plot(hoek, r_par, label=f'reflectie parallel', color='blue')
ax1.plot(hoek, r_lr)


  #horizontale lijn plotten bij y=0
ax1.axhline(y=0, color='black', linestyle='-', lw='2')

# titels en bijschriften toevoegen
ax1.set_title(f'Reflectie en transmissie coefficiÃ«nten van stof met n= {n_1} naar n = {n_2}')
ax1.set_xlabel('hoek (graden)')
ax1.set_ylabel('CoefficiÃ«nt')

# bereik van assen instellen
ax1.set_ylim(bottom=-1, top=1)
ax1.set_xlim(left=0, right=90)

ax1.set_xticks(np.arange(0, 91, 10))  # Major ticks elke 2 eenheden
ax1.set_xticks(np.arange(0, 91, 2), minor=True)  # Minor ticks elke 1 eenheid

ax1.set_yticks(np.arange(-1, 1.1, 0.25))  # Major ticks elke 0.25 eenheid
ax1.set_yticks(np.arange(-1, 1.01, 0.05), minor=True)  # Minor ticks elke 0.05 eenheid

#ax1.minorticks_on()
ax1.grid(visible=True, which='major', color='k', linestyle='solid')
ax1.grid(visible= True, which='minor', color='k', linestyle='dotted')

ax1.legend(loc='lower left', bbox_to_anchor=(1, 0.8))
plt.show()


------------------


[1;36m  Cell [1;32mIn[2], line 23[1;36m[0m
[1;33m    r_loodrecht =[0m
[1;37m                  ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax


